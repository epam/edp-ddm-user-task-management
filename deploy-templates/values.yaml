global:
  disableRequestsLimits: false
  registry:
    userTaskManagement:
      istio:
        sidecar:
          enabled: true
          resources:
            limits: {}
            requests: {}
      container:
        resources: {}
        envVars: {}

podAnnotations: {}
image:
  name: user-task-management
  version: latest
port: 8080
service:
  type: ClusterIP
  port: 8080
replicas: 1
appConfigMountPath: "/app/config"
cephSecretMountPath: "/app/secrets/ceph"
readinessPath: "/user-task-management/actuator/health/readiness"
livenessPath: "/user-task-management/actuator/health/liveness"
redisSecretsMountPath: "/app/secrets/redis"

prometheus:
  endpoints:
    - scrapePath: "/user-task-management/actuator/prometheus"
      port: "{{ .Values.service.port }}"

ingress: # expose the service with a route or an ingress depending on platform type
  platform: openshift # openshift or kubernetes

ceph:
  bucketName: lowcode-form-data-storage
  host: ${CEPH_BUCKET_HOST}

storage:
  form-data:
    type: redis
  backend:
    redis:
      password: ${REDIS_PASSWORD}
      sentinel:
        master: mymaster
        nodes: ${redis.endpoint}

redis:
  secretName: redis-auth

s3:
  config:
    client:
      protocol: http
    options:
      pathStyleAccess: true

monitoring:
  namespace: openshift-monitoring

keycloak:
  realms:
    officer: officer-portal
    citizen: citizen-portal
    admin: admin
  certificatesEndpoint: /protocol/openid-connect/certs

deployProfile: prod